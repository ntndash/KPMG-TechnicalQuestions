function Get-NestedKeyValue {
    param (
        [Parameter(Mandatory=$true)] [System.Object]$Object, 
        [Parameter(Mandatory=$true)] [string]$Key
    )

 

    # Throwing Exception when given Nested Object does not contain key value pair
    if ($Object -isnot [System.Collections.IDictionary]) {
        throw "Invalid Object: Please provide Object with Key-Value pairs"
    }


 

    #  Fetching the value for key
    if ($Object.ContainsKey($Key)) {
        return $Object[$Key] 
    }

 

    # Iterating Over nested object to find the value of desired key
    foreach ($prop in $Object.GetEnumerator()) {
        if ($prop.Value -is [System.Collections.IDictionary]) {
            $result = Get-NestedKeyValue -Object $prop.Value -Key $Key
            if ($result -ne $null) {
                return $result
            }
        }
    }

 

    # Return null if the key is not available 
    return $null 
}


#Testing
Get-NestedKeyValue -Object @{"1"= @{"2"=@{"3"=4; "5"= 6}}} -Key 5